import requests
from db import SessionLocal, init_db
from models import Party
from sqlalchemy.exc import SQLAlchemyError
from helpers import clean_name

API_URL = "https://www.parliament.bg/api/v1/coll-list/bg/2"

# Optional: manual overrides for abbreviation
known_abbreviations = {
    "–ì–ï–†–ë ‚Äì –°–î–°": "–ì–ï–†–ë-–°–î–°",
    "–ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–º–µ –ü—Ä–æ–º—è–Ω–∞—Ç–∞ ‚Äì –î–µ–º–æ–∫—Ä–∞—Ç–∏—á–Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è": "–ü–ü-–î–ë",
    "–í–™–ó–†–ê–ñ–î–ê–ù–ï": "–í–™–ó–†–ê–ñ–î–ê–ù–ï",
    "–î–≤–∏–∂–µ–Ω–∏–µ –∑–∞ –ø—Ä–∞–≤–∞ –∏ —Å–≤–æ–±–æ–¥–∏ ‚Äì –ù–æ–≤–æ –Ω–∞—á–∞–ª–æ ‚Äì –î–ü–° ‚Äì –ù–æ–≤–æ –Ω–∞—á–∞–ª–æ": "–î–µ–º–æ–∫—Ä–∞—Ü–∏—è, –ø—Ä–∞–≤–∞ –∏ —Å–≤–æ–±–æ–¥–∏ ‚Äì –î–ü–°",
    "–ë–°–ü ‚Äì –û–ë–ï–î–ò–ù–ï–ù–ê –õ–ï–í–ò–¶–ê": "–ë–°–ü",
    "–ò–º–∞ –¢–∞–∫—ä–≤ –ù–∞—Ä–æ–¥": "–ò–¢–ù",
    "–ê–ª–∏–∞–Ω—Å –∑–∞ –ø—Ä–∞–≤–∞ –∏ —Å–≤–æ–±–æ–¥–∏": "–ê–ü–°",
    "–ü–ü –ú–ï–ß": "–ú–ï–ß",
    "–í–ï–õ–ò–ß–ò–ï": "–í–ï–õ–ò–ß–ò–ï",
    "–ù–µ—á–ª–µ–Ω—É–≤–∞—â–∏ –≤ –ü–ì": "–ë–µ–∑–ü–ì"
}

def seed_parties():
    print("üì° Fetching party list from API...")
    headers = {
        "User-Agent": "Parliametrics/0.1 (mihail.chifligarov@ruhr-uni-bochum.de)"
    }
    res = requests.get(API_URL, headers=headers)
    res.raise_for_status()
    data = res.json()

    init_db()
    db = SessionLocal()
    added = 0
    added_parties = set()

    try:
        for item in data:
            raw_name = item["A_ns_CL_value"]
            party_api_id = item["A_ns_C_id"]

            name = clean_name(raw_name)
            abbreviation = known_abbreviations.get(name, name.split()[-1])

            exists = db.query(Party).filter_by(party_name=name).first()
            recently_added = name in added_parties
            if exists or recently_added:
                print(f"‚ö†Ô∏è  Already exists: {name}")
                if exists and party_api_id != exists.party_api_id:
                    exists.party_api_id = party_api_id
                continue

            party = Party(party_name=name, party_abbreviation=abbreviation, party_api_id=party_api_id)
            db.add(party)
            added += 1
            added_parties.add(name)
            print(f"‚ûï Added: {name} ({abbreviation})")

        db.commit()
        print(f"\n‚úÖ Done. Added {added} new parties.")
    except SQLAlchemyError as e:
        db.rollback()
        print(f"‚ùå Database error: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    seed_parties()